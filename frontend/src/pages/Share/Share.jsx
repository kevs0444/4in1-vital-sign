import React, { useState, useEffect, useRef } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import "./Share.css";
import shareIcon from "../../assets/icons/share-icon.png";
import { QRCodeSVG } from "qrcode.react";

export default function Share() {
  const navigate = useNavigate();
  const location = useLocation();
  const [isVisible, setIsVisible] = useState(false);
  const [selectedOption, setSelectedOption] = useState("");
  const [isSharing, setIsSharing] = useState(false);
  const [shareComplete, setShareComplete] = useState(false);
  const [userData, setUserData] = useState({});
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [showQR, setShowQR] = useState(false);

  const qrRef = useRef();

  useEffect(() => {
    // Get all collected data from location state
    if (location.state) {
      setUserData(location.state);
    }
    
    // Animation trigger
    const timer = setTimeout(() => {
      setIsVisible(true);
    }, 100);

    return () => clearTimeout(timer);
  }, [location.state]);

  const calculateBMI = () => {
    if (!userData.weight || !userData.height) return null;
    const heightInMeters = userData.height / 100;
    return (userData.weight / (heightInMeters * heightInMeters)).toFixed(1);
  };

  const generateHealthSummary = () => {
    const bmi = calculateBMI();
    return `
VitalSign AI Health Report

Personal Information:
Name: ${userData.firstName} ${userData.lastName}
Age: ${userData.age} years
Sex: ${userData.sex === 'male' ? 'Male' : 'Female'}

Vital Signs:
Weight: ${userData.weight} kg
Height: ${userData.height} cm
BMI: ${bmi}
Body Temperature: ${userData.bodyTemp}Â°C
Heart Rate: ${userData.heartRate} BPM
Blood Oxygen: ${userData.spo2}%
Respiratory Rate: ${userData.respiratoryRate}/min

Measured on: ${new Date().toLocaleDateString()}
Generated by: Four-in-One Vital Sign Sensor
    `.trim();
  };

  const simulateShareProcess = () => {
    if (!selectedOption) {
      alert("Please select a sharing method");
      return;
    }

    if (selectedOption === 'email' && !email) {
      alert("Please enter an email address");
      return;
    }

    if (selectedOption === 'sms' && !phone) {
      alert("Please enter a phone number");
      return;
    }

    setIsSharing(true);
    
    // Simulate sharing process
    setTimeout(() => {
      setIsSharing(false);
      setShareComplete(true);
      
      // Auto navigate after 3 seconds
      setTimeout(() => {
        navigate("/result", { state: userData });
      }, 3000);
    }, 2000);
  };

  const handleBack = () => {
    navigate("/saving");
  };

  const handleSkip = () => {
    navigate("/result", { state: userData });
  };

  const handleRetry = () => {
    setSelectedOption("");
    setShareComplete(false);
    setEmail("");
    setPhone("");
    setShowQR(false);
  };

  const downloadQRCode = () => {
    const canvas = qrRef.current.querySelector("canvas");
    if (canvas) {
      const pngUrl = canvas.toDataURL("image/png");
      const downloadLink = document.createElement("a");
      downloadLink.href = pngUrl;
      downloadLink.download = `health-report-${userData.firstName}-${userData.lastName}.png`;
      document.body.appendChild(downloadLink);
      downloadLink.click();
      document.body.removeChild(downloadLink);
    }
  };

  return (
    <div className="share-container">
      <div className={`share-content ${isVisible ? 'visible' : ''}`}>
        
        {/* Header */}
        <div className="share-header">
          <div className="share-icon">
            <img src={shareIcon} alt="Share Results" />
          </div>
          <h1 className="share-title">
            {shareComplete ? "Shared Successfully!" : "Share Your Results"}
          </h1>
          <p className="share-subtitle">
            {shareComplete 
              ? "Your health report has been sent successfully!"
              : "Choose how you'd like to share your health report"
            }
          </p>
        </div>

        {/* Sharing Options */}
        {!shareComplete && (
          <div className="sharing-options">
            <h2 className="options-title">Select Sharing Method</h2>
            
            <div className="options-grid">
              {/* Email Option */}
              <div 
                className={`option-card ${selectedOption === 'email' ? 'selected' : ''}`}
                onClick={() => setSelectedOption('email')}
              >
                <div className="option-icon">ðŸ“§</div>
                <div className="option-info">
                  <h3>Email Report</h3>
                  <p>Send detailed health report via email</p>
                </div>
                <div className="option-check">
                  {selectedOption === 'email' && 'âœ“'}
                </div>
              </div>

              {/* SMS Option */}
              <div 
                className={`option-card ${selectedOption === 'sms' ? 'selected' : ''}`}
                onClick={() => setSelectedOption('sms')}
              >
                <div className="option-icon">ðŸ’¬</div>
                <div className="option-info">
                  <h3>SMS Text</h3>
                  <p>Send summary via text message</p>
                </div>
                <div className="option-check">
                  {selectedOption === 'sms' && 'âœ“'}
                </div>
              </div>

              {/* QR Code Option */}
              <div 
                className={`option-card ${selectedOption === 'qr' ? 'selected' : ''}`}
                onClick={() => {
                  setSelectedOption('qr');
                  setShowQR(true);
                }}
              >
                <div className="option-icon">ðŸ”²</div>
                <div className="option-info">
                  <h3>QR Code</h3>
                  <p>Generate shareable QR code</p>
                </div>
                <div className="option-check">
                  {selectedOption === 'qr' && 'âœ“'}
                </div>
              </div>
            </div>

            {/* Email Input */}
            {selectedOption === 'email' && (
              <div className="input-section">
                <label htmlFor="email" className="input-label">
                  Email Address
                </label>
                <input
                  type="email"
                  id="email"
                  className="share-input"
                  placeholder="your.email@example.com"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                />
              </div>
            )}

            {/* SMS Input */}
            {selectedOption === 'sms' && (
              <div className="input-section">
                <label htmlFor="phone" className="input-label">
                  Phone Number
                </label>
                <input
                  type="tel"
                  id="phone"
                  className="share-input"
                  placeholder="+1 (555) 123-4567"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                />
              </div>
            )}

            {/* QR Code Display */}
            {selectedOption === 'qr' && showQR && (
              <div className="qr-section" ref={qrRef}>
                <div className="qr-code-container">
                  <QRCodeSVG 
                    value={generateHealthSummary()}
                    size={200}
                    level="H"
                    includeMargin={true}
                  />
                </div>
                <p className="qr-instruction">
                  Scan this QR code to view the health report
                </p>
                <button 
                  className="download-qr-button"
                  onClick={downloadQRCode}
                >
                  Download QR Code
                </button>
              </div>
            )}
          </div>
        )}

        {/* Sharing Animation */}
        {isSharing && (
          <div className="sharing-animation">
            <div className="sharing-progress">
              <div className="progress-ring">
                <div className="ring-background"></div>
                <div className="ring-progress"></div>
              </div>
              <div className="sharing-status">
                <span className="status-text">
                  Sharing via {selectedOption === 'email' ? 'Email' : selectedOption === 'sms' ? 'SMS' : 'QR Code'}...
                </span>
              </div>
            </div>
          </div>
        )}

        {/* Share Complete */}
        {shareComplete && (
          <div className="share-complete">
            <div className="success-animation">
              <div className="success-icon">âœ…</div>
              <div className="success-rings">
                <div className="ring ring-1"></div>
                <div className="ring ring-2"></div>
              </div>
            </div>
            <div className="complete-message">
              <h3>Successfully Shared!</h3>
              <p>
                Your health report has been {selectedOption === 'email' ? 'emailed' : selectedOption === 'sms' ? 'texted' : 'generated as QR code'}.
                Redirecting to results...
              </p>
            </div>
          </div>
        )}

        {/* Action Buttons */}
        <div className="share-actions">
          {!isSharing && !shareComplete && (
            <>
              <button 
                className="back-button"
                onClick={handleBack}
              >
                Back
              </button>
              
              <button 
                className="skip-button"
                onClick={handleSkip}
              >
                Skip Sharing
              </button>
              
              <button 
                className="share-button"
                onClick={simulateShareProcess}
                disabled={!selectedOption || (selectedOption === 'email' && !email) || (selectedOption === 'sms' && !phone)}
              >
                Share Now
              </button>
            </>
          )}
          
          {shareComplete && (
            <div className="auto-navigate">
              <span className="navigate-text">
                Taking you to your results...
              </span>
            </div>
          )}

          {!isSharing && !shareComplete && selectedOption && (
            <button 
              className="retry-button"
              onClick={handleRetry}
            >
              Change Method
            </button>
          )}
        </div>

        {/* Privacy Notice */}
        <div className="privacy-notice">
          <div className="privacy-icon">ðŸ”’</div>
          <div className="privacy-text">
            <strong>Your Privacy Matters</strong>
            <span>All shared data is encrypted and secure</span>
          </div>
        </div>
      </div>
    </div>
  );
}